# Workflow API version
apiVersion: io.orquestra.workflow/1.0.0

# Prefix for workflow ID
name: optimize-circuit

imports:
- name: z-quantum-core
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/z-quantum-core.git"
    branch: "workflow-v1"
- name: z-quantum-optimizers
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/z-quantum-optimizers.git"
    branch: "workflow-v1"
# - name: qe-qiskit
#   type: git
#   parameters:
#     repository: "git@github.com:zapatacomputing/qe-qiskit.git"
#     branch: "master"
# - name: qe-openfermion
#   type: git
#   parameters:
#     repository: "git@github.com:zapatacomputing/qe-openfermion.git"
#     branch: "master"

steps:

- name: get-initial-parameters
  config:
    runtime:
      type: python3
      imports: [z-quantum-core]
      parameters:
        file: z-quantum-core/tasks/circuit_tasks.py
        function: generate_random_ansatz_params
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - ansatz_specs: '{"module_name": "zquantum.core.interfaces.mock_objects", "function_name": "MockAnsatz", "number_of_layers": 2, "problem_size": 4}'
      type: string
    - min_value: -1.57
      type: float
    - max_value: 1.57
      type: float
    - seed: 9
      type: int
    - number_of_parameters: "None"
      type: string
  outputs:
    - name: params
      type: ansatz-params


- name: optimize-circuit
  passed: [get-initial-parameters]
  config:
    runtime:
      type: python3
      imports:  [z-quantum-core, qe-openfermion, z-quantum-optimizers, qe-qiskit, z-quantum-qcbm]
      parameters:
        file: z-quantum-optimizers/tasks/optimizers_tasks.py
        function: optimize_variational_circuit
    resources:
      cpu: "1000m"
      memory: "2Gi"
  inputs:
    - ansatz_specs: '{"module_name": "zquantum.core.interfaces.mock_objects", "function_name": "MockAnsatz", "number_of_layers": 2, "problem_size": 4}'
      type: string
    - backend_specs: '{"module_name": "qeqiskit.simulator", "function_name": "QiskitSimulator", "device_name": "statevector_simulator"}'
      type: string
    - optimizer_specs: '{"module_name": "zquantum.optimizers.cma_es_optimizer", "function_name": "CMAESOptimizer", "options": {"popsize": 5, "sigma_0": 0.1, "tolx": 1e-6, "seed": 9}}'
      type: string
    - cost_function_specs:
      type: string
    - initial_parameters: ((get-initial-parameters.params))
      type: ansatz-params
    - fixed_parameters: "None"
      type: string
    - noise_model: "None"
      type: string
    - device_connectivity: "None"
      type: string
    - parameter_grid: "None"
      type: string
    - constraint_operator: "None"
      type: string
  outputs:
    - name: optimization-results
      type: opt-results
    - name: optimized-parameters
      type: ansatz-params

types:
 - ansatz-params
 - opt-results
